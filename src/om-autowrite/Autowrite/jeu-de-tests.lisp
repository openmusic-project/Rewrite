(in-package :nautowrite)
(defgeneric verify-automaton (a nb-states nb-rules))

(defmethod verify-automaton ((a table-automaton) nb-states nb-rules)
  (let ((nbs (container-size (get-states a)))
	(nbt (number-of-transitions (transitions-of a))))
  (format t "verifying ~A ~A ~A ~%" (name a) nbs nbt)
  (assert (= nb-states nbs))
  (assert (= nb-rules nbt))))

(defun test-nv-jacquemard (sys)
  (format t "test-nv-jacquemard ")
  (verify-automaton (seqsys-aut-c sys :deterministic nil :bullet t) 3 36)
  (let ((aut-d (seqsys-aut-d sys :deterministic nil :partial t)))
    (assert (empty-container-p (get-finalstates aut-d)))
    (assert (= 17 (container-size (get-states aut-d))))
    (assert (= 6139 (number-of-transitions (transitions-of aut-d))))
    (setf aut-d (seqsys-aut-d  sys :deterministic nil :extra t :partial t))
    (assert (contents (get-finalstates (seqsys-aut-d-extra-ndet sys))))
    (format t "passed~%")))

(defun test-nv-toyama (sys)
  (format t "test-nv-toyama ")
  (let ((aut-d (seqsys-aut-d sys)))
    (assert (empty-container-p (get-finalstates aut-d)))
    (verify-automaton (seqsys-aut-d sys :partial t) 13 2238)
    (setf aut-d (seqsys-aut-d sys :extra t :partial t))
    (assert (contents (get-finalstates aut-d)))
    (format t "passed~%")))

(defun test-nv () ;; 10.06sec 2011-05-26
  (let* ((*spec* (read-spec-from-path (absolute-filename "S04.txt")))
	 (sys (trs *spec*)))
    (update-approximation 'nv-approximation)
    (print sys)
    (test-nv-jacquemard sys)
    (test-nv-toyama sys)
))

(defun test-g-toyama (sys)
  (format t "test-g-toyama ")
  (let ((aut-d (seqsys-aut-d sys)))
    (assert (empty-container-p (get-finalstates aut-d)))
    (setf aut-d (seqsys-aut-d sys :extra t :partial t))
    (assert (not (empty-container-p (get-finalstates aut-d))))
    (format t "passed~%")))
  
(defun test-g () ;; 23.85sec 2011-05-26
  (let* ((*spec* (read-spec-from-path (absolute-filename "S05.txt")))
	 (sys (trs *spec*)))
    (update-approximation 'growing-approximation)
    (test-g-toyama sys)))

(defun test-call-by-need () ;;  33.89sec 2011-05-26
  (test-nv)
  (test-g))

(defun test-automata () ;;  5min 19.0sec 2011-05-26
  (format t "test automata ~%")
  (let* ((spec (read-spec-from-path (absolute-filename "S05.txt")))
	 (trs (trs spec))
	 (a (make-redex-automaton  (get-lhs trs) (signature trs))))
    (defparameter *aa* a)
    (verify-automaton a 16 23)
    (format t " emptiness ~% ")
    (assert (not (automaton-emptiness a))) 
    (format t " disjoint-union ~%")
    (verify-automaton
     (disjoint-union-automaton a (duplicate-automaton a)) 32 46)
    (format t " determinize ~%")
    (let ((d (determinize-automaton a)))
      (verify-automaton d 16 65618)
      (format t " simplify ~%")
      (let ((s (simplify-automaton d)))
	(verify-automaton s 4 278)
	(format t " intersection emptiness ~%")
	(assert (intersection-emptiness s (complement-automaton s)))))
    (format t " intersection ~%")
    (let ((i (intersection-automaton a (duplicate-automaton a))))
      (verify-automaton i 46 53)
      (format t " union ~%")
      (let ((u (disjoint-union-automaton a (duplicate-automaton a))))
	(verify-automaton u 32 46)
	(assert (equality-automaton i u))
	(format t "passed~%")
	u))))

(defun jeu-de-tests () ;; in 12min 7.71sec 2011-05-20
  (init-autowrite)
  (test-call-by-need)
  (test-automata))
